7/4
1. 코드 확인
   시간 : 6시 10분까지


7/5
1. 랜덤으로 선택될 Idle 애니메이션의 빈도수를 다르게 작성하라.
  1.1. 1번은 50%, 2번은 30%, 3번은 15%, 4번은 5%가 되어야 한다.
  시간 : 5시까지

2. 코드 읽기
  시간 : 7시 20분까지


7/6
1. 파티클 시스템을 이용하여 눈 내리는 이팩트 만들기
   7시 30분까지


7/7
1. Space키를 누르면 TestWeponSwing이 한바퀴 돈다.
   4시 45분까지

2. Sword01 파티클 조정해보기
   5시 55분까지

3. 항상 Target을 추적한다.
   8시 45분까지


7/8
1. Enemy가 patrolRoute의 자식들의 위치를 계속 모두 순찰하게 만들어라
   4시 45분까지


7/11
1. Enemy.cs의 InSightAngle 함수 완성하기
  1.1. 시야각도 안에 플레이어가 있으면 true를 리턴한다.
  5시 20분까지

  Physics.Raycast


7/12
1. EnemyHP_Bar를 빌보드로 만들기
  시간 : 4시 55분까지


7/13
1. PlayerHpBar를 Player의 HP와 연동하기
  시간 : 6시 10분까지


7/14
1. Player의 lockOnRange를 OnDrawGizmos를 통해 출력하라
  1.1. Handles도 괜찮음
  시간 : 4시 20분까지


7/15
1. 코드 읽어보기.
2. 몬스터를 잡으면 아이템이 드랍되기
  2.1. 10% 확률로 금화 드랍, 20% 확률로 은화 드랍, 70% 확률로 구리 동전 드랍.
  시간 : 5시 20분까지

3. 아이템이 위아래로 반복 이동하면서 특정 방향으로 회전하기
  시간 : 6시 10분까지 -> 6시 20분까지


7/18
1. 미니맵에 아이템이 잘 표시되게 만들기
  시간 : 6시 20분까지


7/19
1. 인벤토리 설계하기
  1.1. 필요한 변수와 필요한 함수가 어떤것들이 있어야 할지 생각해보기
  1.2. Inventory.cs에 주석으로 써보기
  시간 : 4시 20분까지

2. PrintInventory() 함수 완성하기
  1.1. 현재 인벤토리 내용을 콘솔창에 출력하는 함수
       ex) [달걀,달걀,달걀,,뼈다귀,뼈다귀]
  시간 : 8시 20분까지


7/20
1. MoveItem 함수 사용해보기
  시간 : 5시까지
2. Git에 올라간 코드 확인하기
  시간 : 8시 50분까지

3. MoveItem를 UI를 통해 실행하려면 어떻게해야 하는가?
  힌트 : 
        using UnityEngine.EventSystems;
        IDragHandler, IBeginDragHandler, IEndDragHandler