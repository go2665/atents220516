7/4
1. 코드 확인
   시간 : 6시 10분까지


7/5
1. 랜덤으로 선택될 Idle 애니메이션의 빈도수를 다르게 작성하라.
  1.1. 1번은 50%, 2번은 30%, 3번은 15%, 4번은 5%가 되어야 한다.
  시간 : 5시까지

2. 코드 읽기
  시간 : 7시 20분까지


7/6
1. 파티클 시스템을 이용하여 눈 내리는 이팩트 만들기
   7시 30분까지


7/7
1. Space키를 누르면 TestWeponSwing이 한바퀴 돈다.
   4시 45분까지

2. Sword01 파티클 조정해보기
   5시 55분까지

3. 항상 Target을 추적한다.
   8시 45분까지


7/8
1. Enemy가 patrolRoute의 자식들의 위치를 계속 모두 순찰하게 만들어라
   4시 45분까지


7/11
1. Enemy.cs의 InSightAngle 함수 완성하기
  1.1. 시야각도 안에 플레이어가 있으면 true를 리턴한다.
  5시 20분까지

  Physics.Raycast


7/12
1. EnemyHP_Bar를 빌보드로 만들기
  시간 : 4시 55분까지


7/13
1. PlayerHpBar를 Player의 HP와 연동하기
  시간 : 6시 10분까지


7/14
1. Player의 lockOnRange를 OnDrawGizmos를 통해 출력하라
  1.1. Handles도 괜찮음
  시간 : 4시 20분까지


7/15
1. 코드 읽어보기.
2. 몬스터를 잡으면 아이템이 드랍되기
  2.1. 10% 확률로 금화 드랍, 20% 확률로 은화 드랍, 70% 확률로 구리 동전 드랍.
  시간 : 5시 20분까지

3. 아이템이 위아래로 반복 이동하면서 특정 방향으로 회전하기
  시간 : 6시 10분까지 -> 6시 20분까지


7/18
1. 미니맵에 아이템이 잘 표시되게 만들기
  시간 : 6시 20분까지


7/19
1. 인벤토리 설계하기
  1.1. 필요한 변수와 필요한 함수가 어떤것들이 있어야 할지 생각해보기
  1.2. Inventory.cs에 주석으로 써보기
  시간 : 4시 20분까지

2. PrintInventory() 함수 완성하기
  1.1. 현재 인벤토리 내용을 콘솔창에 출력하는 함수
       ex) [달걀,달걀,달걀,,뼈다귀,뼈다귀]
  시간 : 8시 20분까지


7/20
1. MoveItem 함수 사용해보기
  시간 : 5시까지
2. Git에 올라간 코드 확인하기
  시간 : 8시 50분까지

3. MoveItem를 UI를 통해 실행하려면 어떻게해야 하는가?
  힌트 : 
        using UnityEngine.EventSystems;
        IDragHandler, IBeginDragHandler, IEndDragHandler


7/22
1. TempItemSlotUI 조작하기
  1.1. 드래그를 시작하면 보여야 한다. (Open함수)
  1.2. 드래그가 끝나면 보이지 않아야 한다. (Close함수)
  1.3. 드래그 중에 마우스 위치와 같은 곳에 있어야 한다. 
       (using UnityEngine.InputSystem; 
        Vector2 mousePos = Mouse.current.position.ReadValue();)
  시간 : 5시 20분까지

2. 코드 읽기
  시간 : 7시 50분까지


7/25
1. 코드 읽기
  1.1. 완성된 코드 확인
  1.2. 버그 찾기 및 수정(동작이 이상한 부분 찾기)
  시간 : 6시 10분까지


7/26
1. 코드 확인 및 수정
  1.1. 아이템 스택 기능에 맞게 public bool AddItem(ItemData data, uint index); 함수 수정해보기
  시간 : 6시 20분까지


7/27
1. ItemSplitCount의 set 수정하기
  1.1. itemSplitCount에 값을 넣을 때 최소값은 1이다.
  1.2. itemSplitCount에 값을 넣을 때 최대값은 targetSlotUI에 들어있는 아이템 갯수-1 이다.
  1.3. itemSplitCount에 값을 넣을 때 inputField가 갱신된다.
  1.4. 최대값 최소값은 Clamp대신 Mathf.Min, Mathf.Max함수를 이용한다. 
  시간 : 4시 50분까지

2. 나누어진 아이템을 슬롯에 담기
  2.1. 완전히 빈칸에 넣기
  2.2. (같은 종류의 아이템이) 절반쯤 차있는 칸에 넣기(넣었을 때 넘치지 않음)
  2.3. (같은 종류의 아이템이) 절반쯤 차있는 칸에 넣기(넣고도 남는 경우)
  시간 : 7시 50분까지

  버그 발생 : 드래그시 넘치면 그냥 합쳐짐(TempSpliterUI의 Close가 문제), 분리된것 합칠때 최대값이 나온다.
             자기 자리 클릭하면 에러뜸


7/28
1. 아이템을 분리한 도중에 다른 종류의 아이템이 있는 슬롯을 클릭할 경우 Temp와 클릭한 슬롯이 서로 변경되게 수정하기
2. 아이템을 분리하는 도중에는 상세정보창이 안뜨게 한다.
   시간 : 5시까지

발생한 버그 : 마나포션을 하나만 덜어서 마나포션이 3개 있는 곳에 넣으면 5개가 된다.


7/29
1. 코드 읽기
2. 인벤토리에서 아이템을 드래그해서 인벤토리 밖으로 떨궜을 때 아이템이 버려지게 만들기
   시간 : 7시 50분 까지


8/1
1. 변경된 코드 읽기
   시간 : 5시까지

2. 코드 확인 및 아이템 드랍처리 구상
   시간 : 7시 50분까지


8/3
1. 코드 확인
   시간 : 5시 10분까지
2. 아이템을 더 먹을 수 없을 때는 먹지 않도록 처리하기
   시간 : 7시 50분까지
3. 마나포션을 사용할 수 있도록 만들기
   3.1. 플레이어에 IMana 추가하기(IHealth의 마나버전)
   3.2. 마나 포션 아이템이 사용가능하게 만들기
   3.3. 마나 포션을 사용하면 마나가 회복되기


8/4
1. HP/MP 표시하기
  1.1. 화면 좌상단에 HP바와 MP바 추가하기(슬라이더 사용)
  1.2. HP와 MP에 변화가 있을 때 실제 바도 변경되어야 한다.
  1.3. HP와 MP는 최대치보다 올라갈 수 없다.
  시간 : 5시까지


8/8
1. 최종 코드 확인
  시간 : 4시 50분까지