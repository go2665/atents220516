9/27

1. Grid에 자동으로 선을 긋는 함수 DrawGridLine 완성하기
  1.1. Unity grid에 맞게 선을 그리기(가로 11개, 세로 11개)
  1.2. 왼쪽과 위쪽은 한칸씩 더 그려져야 한다.
  시간 : 7시 50분까지


9/28
1. 코드 확인
   시간 : 5시 5분까지

2. 월드 좌표와 그리드 좌표를 서로 변환하는 함수 완성하기
  그리드의 좌상이 (0,0), 우하가 (9,9), 왼->오른(+x), 위->아래(+y)
  2.1. OnClick에서 raycast 완성하기
  2.2. GridToWorld 만들기
  2.3. WorldToGrid 만들기
  시간  : 6시 5분까지 -> 6시 20분까지


9/29
1. Ship.cs의 SetDirection 함수 완성하기
  1.1. SetDirection에서 방향을 지정하면 배 모델링의 회전도 변경된다.
  시간 : 4시 55분


9/30
1. ShipDeploymentInfo 완성하기
   1.1. 함선을 배치하면 Info를 생성하고 Info에 함선 색에 맞는 머티리얼을 설정한다.
   1.2. Info는 ShipDeploymentInfo의 자식으로 생성 되어야 한다.
   시간 : 5시까지

2. BombInfo 완성하기
   2.1. 보드가 공격을 받으면 Info를 생성하고 Info에 포탄 정보용 머티리얼을 설정한다.
   2.2. Info는 BombInfo의 자삭으로 생성 되어야 한다.
   시간 6시 20분까지

3. UndoShipDeployment 완성하기
   3.1. ShipDeploymentInfo에 생성한 함종별 오브젝트들을 기록하는 딕셔너리 만들기
   3.2. UnMarkShipDeplymentInfo 완성하기
   3.3. UndoShipDeployment 실행시 확인용 오브젝트도 사라져야 함
   시간 8시 30분까지


10/5
1. 코드 확인
   시간 5시 5분까지

2. 함선 배치모드에서 함선을 회전할 때 배치 가능 여부에 따라 TempShip 색상 변경하기
   시간 6시 10분까지

3. EnemyPlayer의 AutoShipDeployment() 완성하기
   3.1. AutoShipDeployment가 실행되면 모든 함선이 랜덤하게 자동으로 배치된다.
   시간 8시 20분까지 -> 30분까지

10/6
1. 셔플 알고리즘 구현하기
  시간 : 5시 10분까지

10/11
1. 코드 확인
  시간 : 5시 45분까지

2. 공격이 성공했을 때 공격 지점의 동서남북이 무조건 후보지로 등록되는 버그 수정하기
  2.1. 이미 공격을 한 지점은 후보지가 되면 안된다.
  2.2. 공격한 지점의 바로 옆 지역만 후보지가 되어야 한다.
  시간 : 내일까지

10/12
1. 연속으로 공격이 성공했을 때 공격 성공한 자리의 머리 앞이랑 꼬리 뒤 구하기
  시간 : 4시 40분까지

10/13
1. 코드 확인 + 한줄로 진행 중 줄의 반대쪽을 공격했을 때 양옆에 후보지가 생기는 문제 해결법 생각해보기
  시간 : 5시 20분까지


10/19
1. 코드 확인
2. RandomButton 완성하기
   2.1. 버튼을 클릭하면 남아있는 배가 랜덤으로 배치된다.
3. FinishButton 완성하기
   3.1. 함선이 모두 배치되기 전까지는 Interactable이 false로 되어있는다.
   시간 : 7시 50분까지


10/28
1. ResultAnalysis에 제대로 된 데이터 넘겨주기
   1.1. PlayerBase 수정
   시간 : 5시까지